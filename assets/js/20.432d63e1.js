(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{549:function(e,t,r){"use strict";r.r(t);var s=r(6),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"消息推送"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#消息推送"}},[e._v("#")]),e._v(" 消息推送")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("在 windows 上使用"),r("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks-create",target:"_blank",rel:"noopener noreferrer"}},[e._v("schtasks"),r("OutboundLink")],1),e._v("注册计划任务。\n使用计划任务唤起消息进程")])]),e._v(" "),r("li",[r("p",[e._v("使用 go 实现一个消息进程。用于唤起主进程，比如："),r("code",[e._v("electron.exe --mesage --width 300 --height 500 --url xxxxxx")])])]),e._v(" "),r("li",[r("p",[e._v("electron 的主进程根据参数区分启动渲染窗口逻辑\n参数格式： "),r("code",[e._v("--mesage --width 300 --height 500 --url xxxxxx")])])]),e._v(" "),r("li",[r("p",[e._v("push-windows 消息页面。根据上述参数启动消息窗口")])])]),e._v(" "),r("blockquote",[r("p",[e._v("ps: 由于客户端的安装目录不一致，可以采用查询注册表的方法，找到.exe 程序的安装 目录。"),r("a",{attrs:{href:"https://pkg.go.dev/golang.org/x/sys/windows/registry",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);